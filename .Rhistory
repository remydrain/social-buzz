?list.files
args(list.files)
old.dir <- getwd()
dir.create(testdir)
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path()
file.path("mytest3.R")
file.path("folder1", "folder2")
?dir.create
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
setwd(old.dir)
1:20
pi:10
15:1
?`:`
seq(1, 20)
seq(0, 10, by=0.5)
seq(5, 10, length=30)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), time = 10)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect <- 0.5, 55, -10, 6
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Rem")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"))
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(data = 1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
swirl()
library(lubridate)
install.packages("tidyverse")
library(lubridate)
install.packages("tidyverse")
installed()
installed.packages()
library(ggplot2)
library(ggplot2)
data("diamonds")
View(diamonds)
head(diamonds)
str(diamonds)
colnames(diamonds)
library(tidyverse)
mutate(diamonds, carat_2=carat*100)
library(tidyverse)
names <- c("Imogen", "FCG", "Chetney", "Fearne")
age <- c(25, 900, 856, 162)
people <- data.frame(names, age)
head(people)
str(people)
glimpse(people)
colnames(people)
mutate(people, age_in_20 = age + 20)
fruits <- c("strawberry", "pineapple", "orange", "peach", "grape")
score <- c(4, 2, 5, 1, 3)
data.frame(fruits, score)
fruit_ranks <- data.frame(fruits, score)
data("diamonds")
View(diamonds)
# create a tibble from the diamonds dataset using as_tibble()
as_tibble("diamonds")
# create a tibble from the diamonds dataset using as_tibble()
as_tibble(diamonds)
data(mtcars)
mtcars
as_tibble(mtcars)
readr_example()
read_csv(mtcars)
read_csv(readr_example("mtcars.csv"))
library(readxl)
readxl_example()
read_excel(readxl_example("type-me.xlsx"))
excel_sheets(readxl_example("type-me.xlsx"))
read_excel(readxl_example("type-me.xlsx"), sheet = "numeric_coercion")
bookings_df <- read_csv("hotel_bookings.csv")
head(bookings_df)
str(bookings_df)
colnames(bookings_df)
new_df <- select(bookings_df, `adr`, adults)
mutate(new_df, total = `adr` / adults)
read_csv("social_buzz.csv")
glimpse(social_buzz.csv)
social_buzz <- read_csv("social_buzz.csv")
glimpse(social_buzz)
colnames(social_buzz)
head(social_buzz)
install.packages("here")
library("here")
install.packages("skimr")
library("skimr")
install.packages("janitor")
library("janitor")
install.packages("dplyr")
install.packages("dplyr")
library("dplyr")
install.packages("palmerpenguins")
library("palmerpenguins")
skim_without_charts(penguins)
install.packages("head")
install.packages("here")
library("here")
install.packages("janitor")
library("janitor")
install.packages("skimr")
library("skimr")
skim_without_charts(penguins)
glimpse(penguins)
head(penguins)
penguins %>%
select(-species)
penguins %>%
rename(island_new=island)
rename_with(penguins, toupper)
rename_with(penguins, tolower)
clean_names(penguins)
x <- c(3, 5, 7)
y <- c(2, 4, 6)
x < 5 & y < 5
x < 5 && y < 5
penguins %>% arrange(bill_length_mm)
penguins %>% arrange(-bill_length_mm)
penguins2 <- penguins %>% arrange(-bill_length_mm)
View(penguins2)
penguins %>% group_by(island) %>% drop_na() %>% summarize(mean_bill_length_mm = mean(bill_length_mm))
install.packages("tidyr")
install.packages("tidyr")
library(tidyr)
penguins %>% group_by(island) %>% drop_na() %>% summarize(mean_bill_length_mm = mean(bill_length_mm))
install.packages("tidyverse")
library("tidyverse")
penguins %>% group_by(island) %>% drop_na() %>% summarize(max_bill_length_mm = max(bill_length_mm))
penguins %>% group_by(species, island) %>% drop_na() %>% summarize(max_bl = mas(bill_length_mm), mean_bl = mean(bill_length_mm))
penguins %>% group_by(species, island) %>% drop_na() %>% summarize(max_bl = max(bill_length_mm), mean_bl = mean(bill_length_mm))
penguins %>% filter(species == "Adelie")
install.packages("tidyverse")
install.packages("skimr")
install.packages("janitor")
library(tidyverse)
library(skimr)
library(janitor)
bookings_df <- read_csv("hotel_bookings_v2.csv")
head(bookings_df)
str(bookings_df)
colnames(bookings_df)
skim_without_charts(bookings_df)
trimmed_df <- bookings_df %>%
select('hotel', 'is_canceled', 'lead_time')
trimmed_df %>%
select(hotel, is_canceled, lead_time) %>%
rename(hotel_type = hotel)
example_df <- bookings_df %>%
select(arrival_date_year, arrival_date_month) %>%
unite(arrival_month_year, c("arrival_date_month", "arrival_date_year"), sep = " ")
example_df <- bookings_df %>%
mutate(guests = sum('adults', 'children', 'babies'))
example_df <- bookings_df %>%
mutate(guests = sum(adults, children, babies))
head(example_df)
example_df <- bookings_df %>%
mutate(number_canceled = sum(is_canceled), average_lead_time = avg(lead_time))
example_df <- bookings_df %>%
mutate(number_canceled = sum(is_canceled), average_lead_time = average(lead_time))
example_df <- bookings_df %>%
mutate(number_canceled = sum(is_canceled), average_lead_time = mean(lead_time))
head(example_df)
id <- c(1:10)
name <- c("John Mendes", "Rob Stewart", "Rachel Abrahamson", "Christy Hickman", "Johnson Harper", "Candace Miller", "Carlson Landy", "Pansy Jordan", "Darius Berry", "Claudia Garcia")
job_title <- c("Professional", "Programmer", "Management", "Clerical", "Developer", "Programmer", "Management", "Clerical", "Developer", "Programmer")
employee <- data.frame(id, name, job_title)
print(employee)
separate(employee, name, into = c('first_name', 'last_name'), sep = ' ')
emp <- separate(employee, name, into = c('first_name', 'last_name'), sep = ' ')
print(emp)
unite(emp, 'name', first_name, last_name, sep=' ')
View(penguins)
install.packages("Tmisc")
library("Tmisc")
data(quartet)
View(quartet)
quartet %>%
group_by(set) %>%
summarize(mean(x),sd(x),mean(y),sd(y),cor(x,y))
ggplot(quartet,aes(x,y)) + geom_poinnt() + geom_smooth(method=lm,se=FALSE) + facet_wrap(-set)
ggplot(quartet,aes(x,y)) + geom_point() + geom_smooth(method=lm,se=FALSE) + facet_wrap(-set)
install.packages(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
ggplot(quartet,aes(x,y)) + geom_point() + geom_smooth(method=lm,se=FALSE) + facet_wrap(-set)
install.packages('datasauRus')
library(datasauRus)
library('datasauRus')
install.packages("SimDesign")
library("SimDesign")
?SimFunctions
actual_temp <- c(68.3, 70, 72.4, 71, 67, 70)
predicted_temp <- c(67.9, 69, 71.5, 70, 67, 69)
bias(actual_temp, predicted_temp)
# example with sales data
actual_sales <- c(150, 203, 137, 247, 116, 287)
predicted_sales <- c(200, 300, 150, 250, 150, 300)
bias(actual_sales, predicted_sales)
install.packages("tidyverse")
install.packages("skimr")
install.packages("janitor")
library(tidyverse)
library(skimr)
library(janitor)
hotel_bookings <- read_csv("")
hotel_bookings <- read_csv("hotel_bookings.csv")
head(hotel_bookings)
(hotel_bookings)
str(hotel_bookings)
glimpse(hotel_bookings)
colnames(hotel_bookings)
arrange(hotel_bookings, lead_time)
arrange(hotel_bookings, desc(lead_time))
head(hotel_bookings)
hotel_bookings_v2 <-
arrange(hotel_bookings, desc(lead_time))
head(hotel_bookings_v2)
max(hotel_bookings$lead_time)
min(hotel_bookings$lead_time)
min(lead_time)
mean(hotel_bookings$lead_time)
mean(hotel_bookings_v2$lead_time)
hotel_bookings_city <-
filter(hotel_bookings, hotel_bookings$hotel=="City Hotel")
head(hotel_bookings_city)
mean(hotel_bookings_city$lead_time)
hotel_summary <-
hotel_bookings %>%
group_by(hotel) %>%
summarise(average_lead_time=mean(lead_time),
min_lead_time=min(lead_time),
max_lead_time=max(lead_time))
head(hotel_summary)
install.packages("ggplot2")
library("ggplot2")
install.packages("palmerpenguins")
library("palmerpenguins")
data(penguins)
View(penguins)
ggplot(data=penguins)+geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g))
ggplot(data=penguins)+geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g))
ppp_over_150K <- read_csv("public_150k_plus_230331.csv")
install.packages("tidyverse")
library(tidyverse)
ppp_over_150K <- read_csv("public_150k_plus_230331.csv")
setwd("~/data/RStudio")
ppp_over_150K <- read_csv("public_150k_plus_230331.csv")
View(ppp_over_150K)
col(ppp_over_150K)
glimpse(ppp_over_150K)
# PPP loans over $150K
ggplot(data=ppp_over_150K)+geom_point(mapping=aes(x=ForgivenessAmount,y=PAYROLL_PROCEED))
install.packages("Tmisc")
library(Tmisc)
data(quartet)
View(quartet)
quartet %>%
group_by(set) %>%
summarize(mean(x),sd(x),mean(y),sd(y),cor(x,y))
ggplot(quartet,aes(x,y))+geom_point()+geom_smooth(method=lm,se=FALSE)+facet_wrap(-set)
ggplot(quartet,aes(x,y))+geom_point()+geom_smooth(method=lm,se=FALSE)+facet_wrap(~set)
# Create a plot in ggplot2
ggplot(data=penguins)+geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g))
ggplot(data=penguins)+geom_point(mapping=aes(x=bill_length_mm,y=bill_depth_mm))
hotel_bookings <- read.csv("hotel_bookings.csv")
head(hotel_bookings)
colnames(hotel_bookings)
ggplot(data = hotel_bookings) +
geom_point(mapping = aes(x = lead_time, y = children))
ggplot(data = hotel_bookings) +
geom_point(mapping = aes(x = stays_in_weekend_nights, y = children))
ggplot(data = penguins)+
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g))
ggplot(data = penguins)+
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g,color=species))
ggplot(data = penguins)+
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g,shape=species))
ggplot(data = penguins)+
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g,shape=species,color=species))
ggplot(data = penguins)+
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g,shape=species,color=species,size=species))
ggplot(data = penguins)+
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g,shape=species,alpha=species))
ggplot(data = penguins)+
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g,alpha=species),color="purple")
ggplot(data = penguins)+
geom_line(mapping=aes(x=flipper_length_mm,y=body_mass_g,alpha=species))
ggplot(data = penguins)+
geom_smooth(mapping=aes(x=flipper_length_mm,y=body_mass_g,alpha=species))
ggplot(data = penguins)+
geom_smooth(mapping=aes(x=flipper_length_mm,y=body_mass_g))
ggplot(data = penguins)+
geom_smooth(mapping=aes(x=flipper_length_mm,y=body_mass_g))+
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g))
ggplot(data=penguins)+
geom_smooth(mapping=aes(x=flipper_length_mm,y=body_mass_g,linetype=species))
ggplot(data=penguins)+
geom_jitter(mapping=aes(x=flipper_length_mm,y=body_mass_g))
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=cut))
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=cut,color=cut))
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=cut,fill=cut))
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=cut,fill=clarity))
## facets
ggplot(data=penguins)+
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g,color=species))+
facet_wrap(~species)
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=color,fill=cut))+
facet_wrap(~cut)
ggplot(data=penguins)+
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g,color=species))+
facet_grid(sex~species)
ggplot(data=penguins)+
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g,color=species))+
facet_grid(~species)
ggplot(data=penguins)+
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g,color=species))+
facet_grid(~sex)
head(hotel_bookings)
colnames(hotel_bookings)
ggplot(data = hotel_bookings) +
geom_bar(mapping = aes(x = distribution_channel))
install.packages("DBI")
library(DBI)
# Create an in-memory RSQLite database of the mtcars dataset
con <- dbConnect(RSQLite::SQLite(), dbname=":memory:")
# Create an in-memory RSQLite database of the mtcars dataset
con <- dbConnect(RSQLite::SQLite(), dbname=":memory:")
install.packages("RSQLite")
library(RSQLite)
# Create an in-memory RSQLite database of the mtcars dataset
con <- dbConnect(RSQLite::SQLite(), dbname=":memory:")
dbListTables(con)
dbWriteTable(con, "mtcars", mtcars)
dbListTables(con)
dbListFields(con, "mtcars")
dbReadTable(con, "mtcars")
install.packages("DBI", "RSQLite")
# remove comment to install/update packages
# install.packages("DBI", "RSQLite")
library(DBI)
library(RSQLite)
con <- dbConnect(RSQLite::SQLite(), dbname=":memory:")
dbListTables(con)
dbWriteTable(con, "mtcars", mtcars)
dbListTables(con)
dbListFields(con, "mtcars")
dbReadTable(con, "mtcars")
dbi_query <- dbGetQuery(con, "SELECT * FROM mtcars WHERE cyl = 4")
# remove comment to install/update packages
# install.packages("DBI", "RSQLite")
library(tidyverse)
library(DBI)
library(RSQLite)
glimpse(dbi_query)
head(dbi_query)
tibble(dbi_query)
# remove comment to install/update packages
# install.packages("DBI", "RSQLite")
library(rmarkdown)
library(tidyverse)
library(DBI)
library(RSQLite)
install.packages("pandoc")
library(pandoc)
knitr::opts_chunk$set(echo = TRUE)
# remove comment to install/update packages
# install.packages("DBI", "RSQLite")
library(pandoc)
library(rmarkdown)
library(tidyverse)
library(DBI)
library(RSQLite)
knitr::opts_chunk$set(echo = TRUE)
library(pandoc)
library(rmarkdown)
library(ggplot2)
ggplot(data=mt_cars_df,
aes(x=disp, y=mpg))+
geom_point()+
xlab("Engine Size")+
ylab("Miles Per Gallon")+
ggtitle("Fuel Efficiency Generally Decreases as Enging Size Increases")
library(dbplyr)
library(dplyr)
dbplyr_query <- tbl(con, "mtcars") %>%
filter(cyl == 4)
show_query(dbplyr_query)
tibble_from_bdplyr <- tbl(con, "mtcars") %>%
filter(cyl == 4) %>%
collect()
shiny::runApp('practice/shiny/app-2')
runApp('practice/shiny/app-2')
runApp('practice/shiny/app-2')
runApp('practice/shiny/app-2')
runApp('practice/shiny/app-2')
runApp('practice/shiny/app-2')
runApp('practice/shiny/app-2')
library(tidyverse)
content_raw <- read.csv(file.path("./raw-data"), "Content.csv")
setwd("~/data/case-studies/social-buzz")
content_raw <- read.csv(file.path("./raw-data"), "Content.csv")
content_raw <- read.csv(file.path("./raw-data/Content.csv")
content_raw <- read.csv(file.path("raw-data"))
content_raw <- read.csv(file.path("raw-data/"))
library(readr)
Content <- read_csv("raw-data/Content.csv")
View(Content)
library(readr)
Reactions <- read_csv("raw-data/Reactions.csv")
View(Reactions)
library(readr)
ReactionTypes <- read_csv("raw-data/ReactionTypes.csv")
View(ReactionTypes)
head(Content)
install.packages("dygraphs")
library(dygraphs)
agg <- read_csv(aggregate.csv)
library(readr)
aggregate <- read_csv("aggregate.csv", col_types = cols(Score = col_number(),
Date = col_date(format = "%Y-%m-%d"),
Hour = col_time(format = "%H"), Minute = col_time(format = "%M"),
Second = col_time(format = "%S")))
View(aggregate)
glimpse(aggregate)
timeframe <- cbind(aggregate$Date, aggregate$Hour)
dygraph(aggregate, main = "Content Engagement")
