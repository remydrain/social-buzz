library("skimr")
install.packages("janitor")
library("janitor")
install.packages("dplyr")
install.packages("dplyr")
library("dplyr")
install.packages("palmerpenguins")
library("palmerpenguins")
skim_without_charts(penguins)
install.packages("head")
install.packages("here")
library("here")
install.packages("janitor")
library("janitor")
install.packages("skimr")
library("skimr")
skim_without_charts(penguins)
glimpse(penguins)
head(penguins)
penguins %>%
select(-species)
penguins %>%
rename(island_new=island)
rename_with(penguins, toupper)
rename_with(penguins, tolower)
clean_names(penguins)
x <- c(3, 5, 7)
y <- c(2, 4, 6)
x < 5 & y < 5
x < 5 && y < 5
penguins %>% arrange(bill_length_mm)
penguins %>% arrange(-bill_length_mm)
penguins2 <- penguins %>% arrange(-bill_length_mm)
View(penguins2)
penguins %>% group_by(island) %>% drop_na() %>% summarize(mean_bill_length_mm = mean(bill_length_mm))
install.packages("tidyr")
install.packages("tidyr")
library(tidyr)
penguins %>% group_by(island) %>% drop_na() %>% summarize(mean_bill_length_mm = mean(bill_length_mm))
install.packages("tidyverse")
library("tidyverse")
penguins %>% group_by(island) %>% drop_na() %>% summarize(max_bill_length_mm = max(bill_length_mm))
penguins %>% group_by(species, island) %>% drop_na() %>% summarize(max_bl = mas(bill_length_mm), mean_bl = mean(bill_length_mm))
penguins %>% group_by(species, island) %>% drop_na() %>% summarize(max_bl = max(bill_length_mm), mean_bl = mean(bill_length_mm))
penguins %>% filter(species == "Adelie")
install.packages("tidyverse")
install.packages("skimr")
install.packages("janitor")
library(tidyverse)
library(skimr)
library(janitor)
bookings_df <- read_csv("hotel_bookings_v2.csv")
head(bookings_df)
str(bookings_df)
colnames(bookings_df)
skim_without_charts(bookings_df)
trimmed_df <- bookings_df %>%
select('hotel', 'is_canceled', 'lead_time')
trimmed_df %>%
select(hotel, is_canceled, lead_time) %>%
rename(hotel_type = hotel)
example_df <- bookings_df %>%
select(arrival_date_year, arrival_date_month) %>%
unite(arrival_month_year, c("arrival_date_month", "arrival_date_year"), sep = " ")
example_df <- bookings_df %>%
mutate(guests = sum('adults', 'children', 'babies'))
example_df <- bookings_df %>%
mutate(guests = sum(adults, children, babies))
head(example_df)
example_df <- bookings_df %>%
mutate(number_canceled = sum(is_canceled), average_lead_time = avg(lead_time))
example_df <- bookings_df %>%
mutate(number_canceled = sum(is_canceled), average_lead_time = average(lead_time))
example_df <- bookings_df %>%
mutate(number_canceled = sum(is_canceled), average_lead_time = mean(lead_time))
head(example_df)
id <- c(1:10)
name <- c("John Mendes", "Rob Stewart", "Rachel Abrahamson", "Christy Hickman", "Johnson Harper", "Candace Miller", "Carlson Landy", "Pansy Jordan", "Darius Berry", "Claudia Garcia")
job_title <- c("Professional", "Programmer", "Management", "Clerical", "Developer", "Programmer", "Management", "Clerical", "Developer", "Programmer")
employee <- data.frame(id, name, job_title)
print(employee)
separate(employee, name, into = c('first_name', 'last_name'), sep = ' ')
emp <- separate(employee, name, into = c('first_name', 'last_name'), sep = ' ')
print(emp)
unite(emp, 'name', first_name, last_name, sep=' ')
View(penguins)
install.packages("Tmisc")
library("Tmisc")
data(quartet)
View(quartet)
quartet %>%
group_by(set) %>%
summarize(mean(x),sd(x),mean(y),sd(y),cor(x,y))
ggplot(quartet,aes(x,y)) + geom_poinnt() + geom_smooth(method=lm,se=FALSE) + facet_wrap(-set)
ggplot(quartet,aes(x,y)) + geom_point() + geom_smooth(method=lm,se=FALSE) + facet_wrap(-set)
install.packages(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
ggplot(quartet,aes(x,y)) + geom_point() + geom_smooth(method=lm,se=FALSE) + facet_wrap(-set)
install.packages('datasauRus')
library(datasauRus)
library('datasauRus')
install.packages("SimDesign")
library("SimDesign")
?SimFunctions
actual_temp <- c(68.3, 70, 72.4, 71, 67, 70)
predicted_temp <- c(67.9, 69, 71.5, 70, 67, 69)
bias(actual_temp, predicted_temp)
# example with sales data
actual_sales <- c(150, 203, 137, 247, 116, 287)
predicted_sales <- c(200, 300, 150, 250, 150, 300)
bias(actual_sales, predicted_sales)
install.packages("tidyverse")
install.packages("skimr")
install.packages("janitor")
library(tidyverse)
library(skimr)
library(janitor)
hotel_bookings <- read_csv("")
hotel_bookings <- read_csv("hotel_bookings.csv")
head(hotel_bookings)
(hotel_bookings)
str(hotel_bookings)
glimpse(hotel_bookings)
colnames(hotel_bookings)
arrange(hotel_bookings, lead_time)
arrange(hotel_bookings, desc(lead_time))
head(hotel_bookings)
hotel_bookings_v2 <-
arrange(hotel_bookings, desc(lead_time))
head(hotel_bookings_v2)
max(hotel_bookings$lead_time)
min(hotel_bookings$lead_time)
min(lead_time)
mean(hotel_bookings$lead_time)
mean(hotel_bookings_v2$lead_time)
hotel_bookings_city <-
filter(hotel_bookings, hotel_bookings$hotel=="City Hotel")
head(hotel_bookings_city)
mean(hotel_bookings_city$lead_time)
hotel_summary <-
hotel_bookings %>%
group_by(hotel) %>%
summarise(average_lead_time=mean(lead_time),
min_lead_time=min(lead_time),
max_lead_time=max(lead_time))
head(hotel_summary)
install.packages("ggplot2")
library("ggplot2")
install.packages("palmerpenguins")
library("palmerpenguins")
data(penguins)
View(penguins)
ggplot(data=penguins)+geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g))
ggplot(data=penguins)+geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g))
ppp_over_150K <- read_csv("public_150k_plus_230331.csv")
install.packages("tidyverse")
library(tidyverse)
ppp_over_150K <- read_csv("public_150k_plus_230331.csv")
setwd("~/data/RStudio")
ppp_over_150K <- read_csv("public_150k_plus_230331.csv")
View(ppp_over_150K)
col(ppp_over_150K)
glimpse(ppp_over_150K)
# PPP loans over $150K
ggplot(data=ppp_over_150K)+geom_point(mapping=aes(x=ForgivenessAmount,y=PAYROLL_PROCEED))
install.packages("Tmisc")
library(Tmisc)
data(quartet)
View(quartet)
quartet %>%
group_by(set) %>%
summarize(mean(x),sd(x),mean(y),sd(y),cor(x,y))
ggplot(quartet,aes(x,y))+geom_point()+geom_smooth(method=lm,se=FALSE)+facet_wrap(-set)
ggplot(quartet,aes(x,y))+geom_point()+geom_smooth(method=lm,se=FALSE)+facet_wrap(~set)
# Create a plot in ggplot2
ggplot(data=penguins)+geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g))
ggplot(data=penguins)+geom_point(mapping=aes(x=bill_length_mm,y=bill_depth_mm))
hotel_bookings <- read.csv("hotel_bookings.csv")
head(hotel_bookings)
colnames(hotel_bookings)
ggplot(data = hotel_bookings) +
geom_point(mapping = aes(x = lead_time, y = children))
ggplot(data = hotel_bookings) +
geom_point(mapping = aes(x = stays_in_weekend_nights, y = children))
ggplot(data = penguins)+
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g))
ggplot(data = penguins)+
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g,color=species))
ggplot(data = penguins)+
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g,shape=species))
ggplot(data = penguins)+
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g,shape=species,color=species))
ggplot(data = penguins)+
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g,shape=species,color=species,size=species))
ggplot(data = penguins)+
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g,shape=species,alpha=species))
ggplot(data = penguins)+
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g,alpha=species),color="purple")
ggplot(data = penguins)+
geom_line(mapping=aes(x=flipper_length_mm,y=body_mass_g,alpha=species))
ggplot(data = penguins)+
geom_smooth(mapping=aes(x=flipper_length_mm,y=body_mass_g,alpha=species))
ggplot(data = penguins)+
geom_smooth(mapping=aes(x=flipper_length_mm,y=body_mass_g))
ggplot(data = penguins)+
geom_smooth(mapping=aes(x=flipper_length_mm,y=body_mass_g))+
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g))
ggplot(data=penguins)+
geom_smooth(mapping=aes(x=flipper_length_mm,y=body_mass_g,linetype=species))
ggplot(data=penguins)+
geom_jitter(mapping=aes(x=flipper_length_mm,y=body_mass_g))
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=cut))
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=cut,color=cut))
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=cut,fill=cut))
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=cut,fill=clarity))
## facets
ggplot(data=penguins)+
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g,color=species))+
facet_wrap(~species)
ggplot(data=diamonds)+
geom_bar(mapping=aes(x=color,fill=cut))+
facet_wrap(~cut)
ggplot(data=penguins)+
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g,color=species))+
facet_grid(sex~species)
ggplot(data=penguins)+
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g,color=species))+
facet_grid(~species)
ggplot(data=penguins)+
geom_point(mapping=aes(x=flipper_length_mm,y=body_mass_g,color=species))+
facet_grid(~sex)
head(hotel_bookings)
colnames(hotel_bookings)
ggplot(data = hotel_bookings) +
geom_bar(mapping = aes(x = distribution_channel))
install.packages("DBI")
library(DBI)
# Create an in-memory RSQLite database of the mtcars dataset
con <- dbConnect(RSQLite::SQLite(), dbname=":memory:")
# Create an in-memory RSQLite database of the mtcars dataset
con <- dbConnect(RSQLite::SQLite(), dbname=":memory:")
install.packages("RSQLite")
library(RSQLite)
# Create an in-memory RSQLite database of the mtcars dataset
con <- dbConnect(RSQLite::SQLite(), dbname=":memory:")
dbListTables(con)
dbWriteTable(con, "mtcars", mtcars)
dbListTables(con)
dbListFields(con, "mtcars")
dbReadTable(con, "mtcars")
install.packages("DBI", "RSQLite")
# remove comment to install/update packages
# install.packages("DBI", "RSQLite")
library(DBI)
library(RSQLite)
con <- dbConnect(RSQLite::SQLite(), dbname=":memory:")
dbListTables(con)
dbWriteTable(con, "mtcars", mtcars)
dbListTables(con)
dbListFields(con, "mtcars")
dbReadTable(con, "mtcars")
dbi_query <- dbGetQuery(con, "SELECT * FROM mtcars WHERE cyl = 4")
# remove comment to install/update packages
# install.packages("DBI", "RSQLite")
library(tidyverse)
library(DBI)
library(RSQLite)
glimpse(dbi_query)
head(dbi_query)
tibble(dbi_query)
# remove comment to install/update packages
# install.packages("DBI", "RSQLite")
library(rmarkdown)
library(tidyverse)
library(DBI)
library(RSQLite)
install.packages("pandoc")
library(pandoc)
knitr::opts_chunk$set(echo = TRUE)
# remove comment to install/update packages
# install.packages("DBI", "RSQLite")
library(pandoc)
library(rmarkdown)
library(tidyverse)
library(DBI)
library(RSQLite)
knitr::opts_chunk$set(echo = TRUE)
library(pandoc)
library(rmarkdown)
library(ggplot2)
ggplot(data=mt_cars_df,
aes(x=disp, y=mpg))+
geom_point()+
xlab("Engine Size")+
ylab("Miles Per Gallon")+
ggtitle("Fuel Efficiency Generally Decreases as Enging Size Increases")
library(dbplyr)
library(dplyr)
dbplyr_query <- tbl(con, "mtcars") %>%
filter(cyl == 4)
show_query(dbplyr_query)
tibble_from_bdplyr <- tbl(con, "mtcars") %>%
filter(cyl == 4) %>%
collect()
setwd("~/data/RStudio/projects/social-buzz")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(DBI)
library(RSQLite)
library(forcats)
library(ggplot2)
buzz <- read.csv("social_buzz.csv")
con <- dbConnect(RSQLite::SQLite(), dbname=":memory:")
dbListTables(con)
dbWriteTable(con, "content", buzz)
dbListTables(con)
# create factor with Category using forcats
top_5$Category <- fct_inorder(top_5$Category) %>% fct_rev()
# lay down some bars, as the kids say
ggplot(top_5)+
geom_col(mapping=aes(x=Score,y=Category), fill="purple")+
labs(title="Top 5 Content Categories")
# lay down some bars, as the kids say
ggplot(top_5)+
geom_col(mapping=aes(x=Score,y=Category), fill="purple")+
labs(title="Top 5 Content Categories")+
theme(axis.text.x=element_text(angle=90, hjust=1))
# lay down some bars, as the kids say
ggplot(top_5)+
geom_col(mapping=aes(x=Score,y=Category), fill="purple")+
labs(title="Top 5 Content Categories")+
geom_text(aes(label=y))
# lay down some bars, as the kids say
ggplot(top_5)+
geom_col(mapping=aes(x=Score,y=Category), fill="purple")+
labs(title="Top 5 Content Categories")+
geom_text(aes(label=Score))
?geom_text
# lay down some bars, as the kids say
ggplot(top_5)+
geom_col(mapping=aes(x=Score,y=Category), fill="purple")+
labs(title="Top 5 Content Categories")+
geom_text()
# lay down some bars, as the kids say
ggplot(top_5)+
geom_col(mapping=aes(x=Score,y=Category), fill="purple")+
labs(title="Top 5 Content Categories")+
geom_text(inherit.aes=T)
# lay down some bars, as the kids say
ggplot(top_5)+
geom_col(mapping=aes(x=Score,y=Category), fill="purple")+
labs(title="Top 5 Content Categories")+
geom_text(x=Score,y=Category)
# create factor with Category using forcats
top_5$Category <- fct_inorder(top_5$Category) %>% fct_rev()
# lay down some bars, as the kids say
ggplot(top_5)+
geom_col(mapping=aes(x=Score,y=Category), fill="purple")+
labs(title="Top 5 Content Categories")+
geom_text(x=Score,y=Category)
View(top_5)
# create factor with Category using forcats
top_5$Category <- fct_inorder(top_5$Category) %>% fct_rev()
# lay down some bars, as the kids say
ggplot(top_5)+
geom_col(mapping=aes(x=Score,y=Category), fill="purple")+
labs(title="Top 5 Content Categories")+
geom_text(x=top5$Score,y=Category)
# create factor with Category using forcats
top_5$Category <- fct_inorder(top_5$Category) %>% fct_rev()
# lay down some bars, as the kids say
ggplot(top_5)+
geom_col(mapping=aes(x=Score,y=Category), fill="purple")+
labs(title="Top 5 Content Categories")+
geom_text(x=top_5$Score,y=Category)
# create factor with Category using forcats
top_5$Category <- fct_inorder(top_5$Category) %>% fct_rev()
# lay down some bars, as the kids say
ggplot(top_5)+
geom_col(mapping=aes(x=Score,y=Category), fill="purple")+
labs(title="Top 5 Content Categories")+
geom_text(x=top_5$Score,y=top_5$Category)
# create factor with Category using forcats
top_5$Category <- fct_inorder(top_5$Category) %>% fct_rev()
# lay down some bars, as the kids say
ggplot(top_5)+
geom_col(mapping=aes(x=Score,y=Category), fill="purple")+
labs(title="Top 5 Content Categories")+
geom_text(x=top_5$Score,y=top_5$Category,label=x)
# create factor with Category using forcats
top_5$Category <- fct_inorder(top_5$Category) %>% fct_rev()
# lay down some bars, as the kids say
ggplot(top_5)+
geom_col(mapping=aes(x=Score,y=Category), fill="purple")+
labs(title="Top 5 Content Categories")+
geom_text(x=top_5$Score,y=top_5$Category,label=top_5$Score)
# lay down some bars, as the kids say
ggplot(top_5)+
geom_col(mapping=aes(x=Score,y=Category), fill="purple")+
labs(title="Top 5 Content Categories")+
geom_text(x=top_5$Score,y=top_5$Category,label=top_5$Score, position=center)
# create factor with Category using forcats
top_5$Category <- fct_inorder(top_5$Category) %>% fct_rev()
# lay down some bars, as the kids say
ggplot(top_5)+
geom_col(mapping=aes(x=Score,y=Category), fill="purple")+
labs(title="Top 5 Content Categories")+
geom_text(x=top_5$Score,y=top_5$Category,label=top_5$Score, position=position_stack(vjust=0.5))
# create factor with Category using forcats
top_5$Category <- fct_inorder(top_5$Category) %>% fct_rev()
# lay down some bars, as the kids say
ggplot(top_5)+
geom_col(mapping=aes(x=Score,y=Category), fill="purple")+
labs(title="Top 5 Content Categories")+
geom_text(x=top_5$Score,y=top_5$Category,label=top_5$Score, position=identity)
# create factor with Category using forcats
top_5$Category <- fct_inorder(top_5$Category) %>% fct_rev()
# lay down some bars, as the kids say
ggplot(top_5)+
geom_col(mapping=aes(x=Score,y=Category), fill="purple")+
labs(title="Top 5 Content Categories")+
geom_text(x=top_5$Score,y=top_5$Category,label=top_5$Score, justification=center)
# create factor with Category using forcats
top_5$Category <- fct_inorder(top_5$Category) %>% fct_rev()
# lay down some bars, as the kids say
ggplot(top_5)+
geom_col(mapping=aes(x=Score,y=Category), fill="purple")+
labs(title="Top 5 Content Categories")+
geom_text(x=top_5$Score,y=top_5$Category,label=top_5$Score, nudge_x = -5)
# create factor with Category using forcats
top_5$Category <- fct_inorder(top_5$Category) %>% fct_rev()
# lay down some bars, as the kids say
ggplot(top_5)+
geom_col(mapping=aes(x=Score,y=Category), fill="purple")+
labs(title="Top 5 Content Categories")+
geom_text(x=top_5$Score,y=top_5$Category,label=top_5$Score, nudge_x = -50)
# create factor with Category using forcats
top_5$Category <- fct_inorder(top_5$Category) %>% fct_rev()
# lay down some bars, as the kids say
ggplot(top_5)+
geom_col(mapping=aes(x=Score,y=Category), fill="purple")+
labs(title="Top 5 Content Categories")+
geom_text(x=top_5$Score,y=top_5$Category,label=top_5$Score, nudge_x = -500)
# create factor with Category using forcats
top_5$Category <- fct_inorder(top_5$Category) %>% fct_rev()
# lay down some bars, as the kids say
ggplot(top_5,mapping=aes(x=Score,y=Category))+
geom_col(fill="purple")+
labs(title="Top 5 Content Categories")+
geom_text(x=top_5$Score,y=top_5$Category,label=top_5$Score, nudge_x = -500)
# create factor with Category using forcats
top_5$Category <- fct_inorder(top_5$Category) %>% fct_rev()
# lay down some bars, as the kids say
ggplot(top_5,mapping=aes(x=Score,y=Category))+
geom_col(fill="purple")+
labs(title="Top 5 Content Categories")+
geom_text(label=top_5$Score, nudge_x = -500)
# create factor with Category using forcats
top_5$Category <- fct_inorder(top_5$Category) %>% fct_rev()
# lay down some bars, as the kids say
ggplot(top_5,mapping=aes(x=Score,y=Category))+
geom_col(fill="purple")+
labs(title="Top 5 Content Categories")+
geom_text(label=x, nudge_x = -500)
# create factor with Category using forcats
top_5$Category <- fct_inorder(top_5$Category) %>% fct_rev()
# lay down some bars, as the kids say
ggplot(top_5,mapping=aes(x=Score,y=Category))+
geom_col(fill="purple")+
labs(title="Top 5 Content Categories")+
geom_text(label=top_5$Score, hjust=0)
# create factor with Category using forcats
top_5$Category <- fct_inorder(top_5$Category) %>% fct_rev()
# lay down some bars, as the kids say
ggplot(top_5,mapping=aes(x=Score,y=Category))+
geom_col(fill="purple")+
labs(title="Top 5 Content Categories")+
geom_text(label=top_5$Score, hjust=-50)
# create factor with Category using forcats
top_5$Category <- fct_inorder(top_5$Category) %>% fct_rev()
# lay down some bars, as the kids say
ggplot(top_5,mapping=aes(x=Score,y=Category))+
geom_col(fill="purple")+
labs(title="Top 5 Content Categories")+
geom_text(label=top_5$Score, hjust=-5)
# create factor with Category using forcats
top_5$Category <- fct_inorder(top_5$Category) %>% fct_rev()
# lay down some bars, as the kids say
ggplot(top_5,mapping=aes(x=Score,y=Category))+
geom_col(fill="purple")+
labs(title="Top 5 Content Categories")+
geom_text(label=top_5$Score, hjust=1)
# create factor with Category using forcats
top_5$Category <- fct_inorder(top_5$Category) %>% fct_rev()
# lay down some bars, as the kids say
ggplot(top_5,mapping=aes(x=Score,y=Category))+
geom_col(fill="purple")+
labs(title="Top 5 Content Categories")+
geom_text(label=top_5$Score, hjust=2)
# create factor with Category using forcats
top_5$Category <- fct_inorder(top_5$Category) %>% fct_rev()
# lay down some bars, as the kids say
ggplot(top_5,mapping=aes(x=Score,y=Category))+
geom_col(fill="purple")+
labs(title="Top 5 Content Categories")+
geom_text(label=top_5$Score, hjust=2, color="white")
